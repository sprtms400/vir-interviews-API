/**
 * @module User
 * 
 * @file User.ts is a model file which contains the interface of schema and model for user collection.
 * @description It is used to define the schema and model for user.
 * email field will be use for indetify the user.
 */

import * as oMongoose from 'mongoose';

const oneDay = 60 * 60 * 24;

/**
 * Define interface for user model
 */
interface IUser extends oMongoose.Document {
    email: string;
    username: string;
    password: string;
    createdDate: Date;
    updatedDate: Date;
}

/**
 * Define user schema and set middleware function.
 */
const Schema = oMongoose.Schema;
const UserSchema = new Schema({
    /**
     * id field automatically generated by mongoDB
     */

    // email use as id for user
    email: {
        type: String,
        required: true,
        unique: true,
    },
    name: {
        type: String,
        minlength: 4,
        maxlength: 64,
        required: true,
        unique: false,
    },
    // password field will be use to store the 'hashed' user password.
    password: {
        type: String,
        minlength: 4,
        maxlength: 128,
        required: true,
    },
    /**
     * expireAt field will be use to store the expire date of email verification.
     * You can disable this feature by removing this field. or set the value to 9999-12-31.
     */
    createdDate: {
        type: Date,
        default: Date.now,
        required: true
    },
    updatedDate: {
        type: Date,
        default: Date.now,
        required: true,
    }
});

/**
 * Modle Middle ware function setting
 */
UserSchema.pre('save', function (next) {
    const currentDate = new Date();
    this.updatedDate = currentDate;

    if (!this.createdDate) {
        this.createdDate = currentDate;
    }
    next();
})

const User = oMongoose.model<IUser>('users', UserSchema);
export { User, IUser };